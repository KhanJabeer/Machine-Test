[{"D:\\Task\\Machine-Test\\machinetest\\src\\index.js":"1","D:\\Task\\Machine-Test\\machinetest\\src\\reportWebVitals.js":"2","D:\\Task\\Machine-Test\\machinetest\\src\\App.js":"3","D:\\Task\\Machine-Test\\machinetest\\src\\utils\\Users.js":"4","D:\\Task\\Machine-Test\\machinetest\\src\\routes\\PrivateRoute.js":"5","D:\\Task\\Machine-Test\\machinetest\\src\\Components\\Dashboard\\Dashboard.jsx":"6","D:\\Task\\Machine-Test\\machinetest\\src\\Components\\Login\\Login.jsx":"7","D:\\Task\\Machine-Test\\machinetest\\src\\Components\\UserManage\\UserManage.jsx":"8","D:\\Task\\Machine-Test\\machinetest\\src\\Components\\UsermanageModal\\UsermanageModal.jsx":"9","D:\\Task\\Machine-Test\\machinetest\\src\\Components\\UsermanageModal\\UserdeleteModal.jsx":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":2034,"mtime":1607000305693,"results":"14","hashOfConfig":"12"},{"size":944,"mtime":1606983406990,"results":"15","hashOfConfig":"12"},{"size":497,"mtime":1607000305693,"results":"16","hashOfConfig":"12"},{"size":1849,"mtime":1607016584740,"results":"17","hashOfConfig":"12"},{"size":1929,"mtime":1607002725440,"results":"18","hashOfConfig":"12"},{"size":3543,"mtime":1607016126479,"results":"19","hashOfConfig":"12"},{"size":3849,"mtime":1607016424789,"results":"20","hashOfConfig":"12"},{"size":930,"mtime":1607016141672,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1eyux9o",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\Task\\Machine-Test\\machinetest\\src\\index.js",[],["47","48"],"D:\\Task\\Machine-Test\\machinetest\\src\\reportWebVitals.js",[],"D:\\Task\\Machine-Test\\machinetest\\src\\App.js",[],"D:\\Task\\Machine-Test\\machinetest\\src\\utils\\Users.js",[],"D:\\Task\\Machine-Test\\machinetest\\src\\routes\\PrivateRoute.js",[],"D:\\Task\\Machine-Test\\machinetest\\src\\Components\\Dashboard\\Dashboard.jsx",["49","50","51","52"],"import React,{useEffect,useState} from \"react\";\r\nimport './Dashboard.css'\r\nimport {BrowserRouter as Router,Route,Switch,Link,Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst Dashboard = ({ loggedInUser,history }) => {\r\n\r\n  console.log(\"sdakjfhsalkjdf\",loggedInUser)\r\n\r\n  const [userDetails,setUserDetails] = useState([])\r\n\r\n  const [currId,setCurrId] = useState(null)\r\n\r\n  useEffect(() => {\r\n    loadUserDetails()\r\n},[])\r\n\r\n\r\nconst loadUserDetails = () => {\r\n  if(localStorage.users) {\r\n    const user = JSON.parse(localStorage.getItem(\"users\"))\r\n    setUserDetails(user)\r\n  }\r\n\r\n  if(localStorage.loggedInUser) {\r\n    const user = JSON.parse(localStorage.getItem(\"loggedInUser\"))\r\n  \r\n    setCurrId(user.userId)\r\n  }\r\n}\r\n\r\n\r\nconst logout = () => {\r\n  localStorage.setItem(\"loggedInUser\",\"\")\r\n  history.push(\"/\")\r\n}\r\n\r\n   \r\n\r\n  return(\r\n    <div>      \r\n       <header>\r\n           <div className=\"dash_title\">\r\n             <div>Welcome To Dashboard</div>\r\n\r\n       {loggedInUser && loggedInUser.role !== \"user\" && <div>\r\n              <Link to=\"/usermanage\" className=\"link_header\">User Management</Link>\r\n           </div>}\r\n\r\n           <div className=\"logout_btn\" >\r\n             <div className=\"logged_user\">{loggedInUser && loggedInUser.name}</div>\r\n              <button onClick={logout}>Log out</button>\r\n           </div>\r\n\r\n           </div>\r\n        </header>\r\n\r\n           <div className=\"dash_content\">\r\n\r\n           <div className=\"userstatus_header\">User List<span>Status</span></div>\r\n            {userDetails && userDetails.length > 0 && userDetails.map((user) => {\r\n              return(\r\n                user.role === \"user\" && user.userId !== currId && <div className=\"user_status\">{user.name}<span>{user.status}</span></div>\r\n              )\r\n            })}\r\n           </div>\r\n    </div>\r\n  )\r\n  }\r\n\r\n\r\nexport default Dashboard;","D:\\Task\\Machine-Test\\machinetest\\src\\Components\\Login\\Login.jsx",["53","54","55","56"],"import React,{useEffect,useState} from \"react\";\r\nimport './Login.css'\r\nimport {BrowserRouter as Router,Route,Switch} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Login = ({ users,changeAuth,history }) => {\r\n\r\nconst handleSubmit =(e)=>{\r\n    e.preventDefault()\r\n  \r\n    const validUser = users && users.findIndex(user => user.email === loginData.email && user.password === loginData.password)\r\n    console.log(\"validUserCheck\",validUser)\r\n    if(validUser !== -1) {\r\n      localStorage.setItem(\"loggedInUser\",JSON.stringify(users[validUser]))\r\n      changeAuth()\r\n      history.push(\"/dashboard\")\r\n    }else {\r\n      alert(\"Invalid email or password\")\r\n    }\r\n}   \r\n\r\nconst [loginData,setLoginData] = useState({email:\"\",password:\"\"})\r\n\r\nconst {email,password} = loginData;\r\n\r\nconst handleChange = (e) => {\r\n  setLoginData({...loginData,[e.target.name]:e.target.value})\r\n}\r\n\r\n  return(\r\n    <div className=\"login_content\">\r\n        <header>\r\n      <h1>Machine Test</h1>\r\n          <h1>Login</h1>\r\n        </header>\r\n\r\n        <form  onSubmit={handleSubmit}>\r\n            <div className=\"login_fields\">\r\n                <input \r\n                className=\"input_boxes\"\r\n                type=\"email\" \r\n                name=\"email\" \r\n                value={email}\r\n                placeholder=\"Email\" \r\n                onChange={(e) => handleChange(e)}\r\n                required />\r\n            </div>\r\n\r\n            <div className=\"login_fields\">\r\n                <input \r\n                className=\"input_boxes\"\r\n                type=\"password\" \r\n                name=\"password\"\r\n                value={password}\r\n                placeholder=\"Password\"\r\n                onChange={(e) => handleChange(e)}\r\n                required/>\r\n            </div>\r\n\r\n            <div className=\"login_btn\">\r\n            <button onClick={handleSubmit}>Login</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n  )\r\n  }\r\n\r\n\r\nexport default Login;","D:\\Task\\Machine-Test\\machinetest\\src\\Components\\UserManage\\UserManage.jsx",["57","58","59","60","61"],"import React,{useEffect,useState} from \"react\";\r\nimport './UserManage.css'\r\nimport {BrowserRouter as Router,Route,Switch,Link} from \"react-router-dom\";\r\nimport { MdModeEdit, MdDelete } from \"react-icons/md\";\r\nimport Users from \"../../utils/Users\";\r\nimport UserManageModal from \"../UsermanageModal/UsermanageModal\";\r\nimport UserdeleteManage from \"../UsermanageModal/UserdeleteModal\";\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nconst UserManage = () => {\r\n\r\n \r\n  const [insertopen,setinsertopen] = useState(false)\r\n  const [editopen,seteditopen] = useState(false)\r\n\r\n  const [opendelete,setopendelete] = useState(false)\r\n  const [userDetails,setUserDetails] = useState([]);\r\n  const [loggedInUser,setLoggedInUser] = useState(null)\r\n\r\n  const [userId,setUserId] = useState(null)\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [currId,setCurrId] = useState(null)\r\n  \r\n\r\n  useEffect(() => {\r\n      loadUserDetails()\r\n  },[])\r\n\r\n\r\n  const loadUserDetails = () => {\r\n   \r\n    if(localStorage.users) {\r\n      const user = JSON.parse(localStorage.getItem(\"users\"))\r\n      setUserDetails(user)\r\n    }\r\n\r\n    if(localStorage.loggedInUser) {\r\n      const user = JSON.parse(localStorage.getItem(\"loggedInUser\"))\r\n      setLoggedInUser(user)\r\n      setCurrId(user.userId)\r\n    }\r\n  }\r\n\r\n  const addModal = ()=> {\r\n    setOpen(true);\r\n    setinsertopen(true)\r\n    seteditopen(false)\r\n\r\n  }\r\n\r\n  const editModal = (userId)=> {\r\n    setUserId(userId)\r\n    setOpen(true)\r\n    seteditopen(true)\r\n    setinsertopen(false)\r\n  }\r\n\r\n  const deleteOpen = (userId)=>{\r\n    setUserId(userId)\r\n    setopendelete(true)\r\n  }\r\n\r\n\r\n  const handleClose =()=>{\r\n    setOpen(false);\r\n    setinsertopen(false)\r\n    seteditopen(false)\r\n    setopendelete(false)\r\n}\r\n\r\n\r\n  return(\r\n    <div>\r\n       <header>\r\n         <div className=\"usermanage_title\">\r\n         <div>User Management</div>\r\n         <Link to=\"/dashboard\" className=\"link_header\">DashBoard</Link>\r\n         {loggedInUser && (loggedInUser.role === \"root\" ||  \"admin\") &&<div className=\"useradd_btn\">\r\n           <button onClick={addModal}>Add User</button>\r\n         </div>}\r\n         </div>\r\n        </header>\r\n     \r\n        <div className=\"usermanage_content\">\r\n      \r\n  \r\n            {userDetails && userDetails.length > 0 && userDetails.map((user) => {\r\n              return(\r\n              user.role === \"user\" && user.userId !== currId &&\r\n                <div className=\"users\">\r\n                <div>{user.name}</div>\r\n                <div>\r\n                {(loggedInUser.role === \"root\" ||  \"admin\") && <MdModeEdit  className=\"edit_icon\" onClick={() => editModal(user.userId)}/>}\r\n                  {loggedInUser.role === \"root\" && <MdDelete className=\"delete_icon\" onClick={() => deleteOpen(user.userId)}/>}\r\n                </div>\r\n                </div>\r\n              )\r\n            })}\r\n             \r\n         \r\n        </div>\r\n\r\n        {\r\n        open && \r\n         <Modal \r\n         open={open}\r\n         onClose={handleClose}\r\n         title={insertopen ? \"Add User\" : \"Edit User\"}\r\n         >\r\n           \r\n        <UserManageModal  add={insertopen} onClose={handleClose} users={userDetails} userId={userId} />\r\n\r\n        </Modal>\r\n        }\r\n\r\n      {\r\n        opendelete && \r\n         <Modal \r\n         open={deleteOpen}\r\n         onClose={handleClose}\r\n         >\r\n\r\n        <UserdeleteManage onClose={handleClose} users={userDetails}  userId={userId} loadUserDetails={loadUserDetails} />\r\n\r\n        </Modal>\r\n        }\r\n\r\n    </div>\r\n  )\r\n  }\r\n\r\n\r\nexport default UserManage;","D:\\Task\\Machine-Test\\machinetest\\src\\Components\\UsermanageModal\\UsermanageModal.jsx",["62","63"],"import React,{useState,useEffect} from \"react\";\r\nimport './UsermanageModal.css'\r\nimport { uuid } from 'uuidv4';\r\n\r\n\r\nconst UserManageModal = ({ add,users,userId,onClose }) => {\r\n\r\n    const [userData,setUserData] = useState({\r\n        name:\"\",\r\n        email:\"\",\r\n        address:\"\",\r\n        country:\"\",\r\n        status:\"active\",\r\n        role:\"user\"\r\n    })\r\n    \r\n    const [userIndex,setIndex] = useState(null)\r\n\r\n    const {name,email,address,country,status,role} = userData;\r\n\r\n    const handleChange = (e) => {\r\n        setUserData({...userData,[e.target.name]:e.target.value})\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!add) {\r\n            const findUser = users && users.find(user => user.userId === userId)\r\n            const findIndex = users && users.map(user => user.userId).indexOf(userId)\r\n\r\n            setIndex(findIndex)\r\n\r\n            console.log(\"sdfkjsahdfjasd\",findIndex)\r\n            const {name,email,address,country,status,role} = findUser;\r\n            setUserData({\r\n                name,email,address,country,status,role\r\n            })\r\n        }\r\n    },[])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(add) {\r\n            users && users.push({userId:uuid(),name,email,address,country,status,role})\r\n            localStorage.setItem(\"users\",JSON.stringify(users))\r\n            onClose();\r\n        }else {\r\n            users[userIndex].name = name;\r\n            users[userIndex].email = email;\r\n            users[userIndex].address = address;\r\n            users[userIndex].country = country;\r\n            users[userIndex].status = status;\r\n            users[userIndex].role = role;\r\n\r\n            localStorage.setItem(\"users\",JSON.stringify(users))\r\n            onClose()\r\n        }\r\n        console.log(\"asdfjsadhfjhads\",users)\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setUserData({\r\n            name:\"\",\r\n            email:\"\",\r\n            address:\"\",\r\n            country:\"\",\r\n            status:\"active\",\r\n            role:\"user\"\r\n        })\r\n    }\r\n\r\n  return(\r\n    <div className=\"modal\">\r\n     <div className=\"modal_title\">{ add ? \"ADD USER\" : \"EDIT USER\" }</div>\r\n     <div className=\"divider\"/>\r\n     <form onSubmit={(e) => handleSubmit(e)}>\r\n\r\n     <div className=\"grid-container\">\r\n\r\n     <div className=\"grid-item\">\r\n         <div className=\"field_label\">Name</div>\r\n         <input className=\"userdata_fields\" type=\"text\" name=\"name\" value={name} onChange={(e) => handleChange(e)} required />\r\n     </div>\r\n\r\n     <div className=\"grid-item\">\r\n         <div className=\"field_label\">Email</div>\r\n         <input className=\"userdata_fields\" type=\"email\" name=\"email\" value={email} onChange={(e) => handleChange(e)} required />\r\n     </div>\r\n\r\n     <div className=\"grid-item\">\r\n         <div className=\"field_label\">Address</div>\r\n         <input className=\"userdata_fields\" type=\"text\" name=\"address\" value={address} onChange={(e) => handleChange(e)} required />\r\n     </div>\r\n\r\n     <div className=\"grid-item\">\r\n         <div className=\"field_label\">Country</div>\r\n         <input className=\"userdata_fields\" type=\"text\" name=\"country\" value={country} onChange={(e) => handleChange(e)} required />\r\n     </div>\r\n\r\n     <div className=\"grid-item\">\r\n         <div className=\"field_label\">Status</div>\r\n         <select className=\"status_fields\" name=\"status\" value={status}  onChange={(e) => handleChange(e)} >\r\n            <option value=\"active\">Active</option>\r\n            <option value=\"inactive\">In-Active</option>\r\n        </select>     \r\n        </div>\r\n\r\n    </div>\r\n  \r\n    <div className=\"btn_wraps\">\r\n        <button className=\"cancel_btn\" onClick={() => onClose()}>Cancel</button>    \r\n        <button className=\"addedit_btn\" type=\"submit\" >{add ? \"ADD\" : \"UPDATE\"}</button>\r\n    </div>\r\n    </form>\r\n    </div>\r\n  )\r\n  }\r\n\r\n\r\nexport default UserManageModal;","D:\\Task\\Machine-Test\\machinetest\\src\\Components\\UsermanageModal\\UserdeleteModal.jsx",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":3,"column":26,"nodeType":"70","messageId":"71","endLine":3,"endColumn":32},{"ruleId":"68","severity":1,"message":"72","line":3,"column":33,"nodeType":"70","messageId":"71","endLine":3,"endColumn":38},{"ruleId":"68","severity":1,"message":"73","line":3,"column":39,"nodeType":"70","messageId":"71","endLine":3,"endColumn":45},{"ruleId":"68","severity":1,"message":"74","line":3,"column":51,"nodeType":"70","messageId":"71","endLine":3,"endColumn":59},{"ruleId":"68","severity":1,"message":"75","line":1,"column":15,"nodeType":"70","messageId":"71","endLine":1,"endColumn":24},{"ruleId":"68","severity":1,"message":"69","line":3,"column":26,"nodeType":"70","messageId":"71","endLine":3,"endColumn":32},{"ruleId":"68","severity":1,"message":"72","line":3,"column":33,"nodeType":"70","messageId":"71","endLine":3,"endColumn":38},{"ruleId":"68","severity":1,"message":"73","line":3,"column":39,"nodeType":"70","messageId":"71","endLine":3,"endColumn":45},{"ruleId":"68","severity":1,"message":"69","line":3,"column":26,"nodeType":"70","messageId":"71","endLine":3,"endColumn":32},{"ruleId":"68","severity":1,"message":"72","line":3,"column":33,"nodeType":"70","messageId":"71","endLine":3,"endColumn":38},{"ruleId":"68","severity":1,"message":"73","line":3,"column":39,"nodeType":"70","messageId":"71","endLine":3,"endColumn":45},{"ruleId":"68","severity":1,"message":"76","line":5,"column":8,"nodeType":"70","messageId":"71","endLine":5,"endColumn":13},{"ruleId":"68","severity":1,"message":"77","line":14,"column":10,"nodeType":"70","messageId":"71","endLine":14,"endColumn":18},{"ruleId":"78","severity":1,"message":"79","line":38,"column":7,"nodeType":"80","endLine":38,"endColumn":9,"suggestions":"81"},{"ruleId":"68","severity":1,"message":"82","line":60,"column":11,"nodeType":"70","messageId":"71","endLine":60,"endColumn":20},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'useEffect' is defined but never used.","'Users' is defined but never used.","'editopen' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'add', 'userId', and 'users'. Either include them or remove the dependency array.","ArrayExpression",["85"],"'resetForm' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},"Update the dependencies array to be: [add, userId, users]",{"range":"88","text":"89"},[1085,1087],"[add, userId, users]"]