[{"D:\\Task\\Machine-Test\\machinetest\\src\\index.js":"1","D:\\Task\\Machine-Test\\machinetest\\src\\reportWebVitals.js":"2","D:\\Task\\Machine-Test\\machinetest\\src\\App.js":"3","D:\\Task\\Machine-Test\\machinetest\\src\\utils\\Users.js":"4","D:\\Task\\Machine-Test\\machinetest\\src\\routes\\PrivateRoute.js":"5","D:\\Task\\Machine-Test\\machinetest\\src\\Components\\Dashboard\\Dashboard.jsx":"6","D:\\Task\\Machine-Test\\machinetest\\src\\Components\\Login\\Login.jsx":"7","D:\\Task\\Machine-Test\\machinetest\\src\\Components\\UserManage\\UserManage.jsx":"8","D:\\Task\\Machine-Test\\machinetest\\src\\Components\\UsermanageModal\\UsermanageModal.jsx":"9","D:\\Task\\Machine-Test\\machinetest\\src\\Components\\UsermanageModal\\UserdeleteModal.jsx":"10","D:\\Task\\Machine-Test\\machinetest\\src\\Components\\TodoList\\TodoList.jsx":"11","D:\\Task\\Machine-Test\\machinetest\\src\\formComponent\\validation.js":"12","D:\\Task\\Machine-Test\\machinetest\\src\\formComponent\\Input.js":"13","D:\\Task\\Machine-Test\\machinetest\\src\\Components\\Login\\Logout.jsx":"14","D:\\Task\\Machine-Test\\machinetest\\src\\Components\\Pagination\\Pagination.jsx":"15"},{"size":517,"mtime":1607083637065,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1607083637105,"results":"18","hashOfConfig":"17"},{"size":2159,"mtime":1607196827095,"results":"19","hashOfConfig":"17"},{"size":944,"mtime":1607083944375,"results":"20","hashOfConfig":"17"},{"size":763,"mtime":1607314287085,"results":"21","hashOfConfig":"17"},{"size":4040,"mtime":1607241600382,"results":"22","hashOfConfig":"17"},{"size":2948,"mtime":1607241635164,"results":"23","hashOfConfig":"17"},{"size":5319,"mtime":1607241679610,"results":"24","hashOfConfig":"17"},{"size":7280,"mtime":1607196827094,"results":"25","hashOfConfig":"17"},{"size":930,"mtime":1607083944374,"results":"26","hashOfConfig":"17"},{"size":3477,"mtime":1607240876295,"results":"27","hashOfConfig":"17"},{"size":3384,"mtime":1607196827095,"results":"28","hashOfConfig":"17"},{"size":706,"mtime":1607196827094,"results":"29","hashOfConfig":"17"},{"size":1607,"mtime":1607195774289,"results":"30","hashOfConfig":"17"},{"size":2401,"mtime":1607241649573,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1eyux9o",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"34"},"D:\\Task\\Machine-Test\\machinetest\\src\\index.js",[],["71","72"],"D:\\Task\\Machine-Test\\machinetest\\src\\reportWebVitals.js",[],"D:\\Task\\Machine-Test\\machinetest\\src\\App.js",[],"D:\\Task\\Machine-Test\\machinetest\\src\\utils\\Users.js",[],"D:\\Task\\Machine-Test\\machinetest\\src\\routes\\PrivateRoute.js",[],"D:\\Task\\Machine-Test\\machinetest\\src\\Components\\Dashboard\\Dashboard.jsx",["73","74","75","76"],"import React,{useEffect,useState} from \"react\";\r\nimport './Dashboard.css'\r\nimport Pagination,{PaginationHelper} from '../Pagination/Pagination';\r\nimport Logout from '../Login/Logout'\r\n\r\n\r\nconst Dashboard = ({ loggedInUser,history }) => {\r\n\r\n\r\n  const [userDetails,setUserDetails] = useState([])\r\n\r\n  const [currId,setCurrId] = useState(null)\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(5);\r\n  const [paginationIndex,updatePaginationIndex] =useState(0);\r\n  const [entersearch,setSearch] =useState(\"\");\r\n  \r\n  useEffect(() => {\r\n    loadUserDetails()\r\n},[])\r\n\r\n\r\n// Search users\r\nuseEffect(() => {\r\n  const results = !entersearch || entersearch.trim() === \"\" ? JSON.parse(localStorage.getItem(\"users\")) : userDetails && userDetails.filter((data) => {\r\n     if (data.name !== null && data.name.toLowerCase().includes(entersearch.toLowerCase()) ||\r\n        (data.status != null && data.status.toLowerCase().includes(entersearch.toLowerCase()))  ||\r\n        (data.country != null && data.country.toLowerCase().includes(entersearch.toLowerCase()))\r\n    ) {\r\n      return data\r\n    }\r\n   \r\n  })\r\n  \r\n  setUserDetails(results)\r\n},[entersearch])\r\n\r\nconst loadUserDetails = () => {\r\n  if(localStorage.users) {\r\n    const user = JSON.parse(localStorage.getItem(\"users\"))\r\n    setUserDetails(user)\r\n  }\r\n\r\n  if(localStorage.loggedInUser) {\r\n    const user = JSON.parse(localStorage.getItem(\"loggedInUser\"))\r\n  \r\n    setCurrId(user.userId)\r\n  }\r\n}\r\n\r\nconst searchUser = (e) => {\r\n   setSearch(e.target.value)\r\n}\r\n\r\n\r\n  // Get current posts\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = userDetails && userDetails.filter((user)=>user.role === \"user\" && user.userId !== currId).slice\r\n  (indexOfFirstPost, indexOfLastPost);\r\n\r\n  // Change page\r\n  const setpaginate = (pageNumber,click_data) => {\r\n\r\n    var gethelperData=PaginationHelper.checkingPaginationProcess(pageNumber,click_data,null,userDetails,postsPerPage,currentPage);\r\n    if(gethelperData.pageNumber){\r\n      setCurrentPage(gethelperData.pageNumber);\r\n    }\r\n    if(gethelperData.totalmovedpage>=0){\r\n      updatePaginationIndex(gethelperData.totalmovedpage);\r\n    }\r\n\r\n  }\r\n\r\n  const updatePaginationData=(data,totalnumbers)=>{\r\n\r\n    updatePaginationIndex(data);\r\n    var gethelperData=PaginationHelper.checkingPaginationProcess((data*5)+1,null,totalnumbers,userDetails,postsPerPage,currentPage);\r\n    if(gethelperData.pageNumber){\r\n      setCurrentPage(gethelperData.pageNumber);\r\n    }\r\n\r\n  }\r\n\r\n   return(\r\n    <div>      \r\n     \r\n        <Logout history={history} loggedInUser={loggedInUser}/>\r\n\r\n        <div className=\"dash_content\">\r\n\r\n          <div className=\"search_wrap\">\r\n            <div className=\"search_label\">Search User</div>\r\n          <input className=\"search_field\" \r\n          type=\"search\"  value={entersearch}  onChange={(e)=>searchUser(e)}/>\r\n          </div>\r\n         \r\n\r\n           <div className=\"userstatus_header\">\r\n             <div>User List</div>\r\n             <div>Country</div>\r\n             <div>Status</div>\r\n             </div>\r\n            {currentPosts && currentPosts.length > 0 && currentPosts.map((user) => {\r\n              return(\r\n                 <div className=\"users\"><div className=\"user_names\">{user.name}</div>\r\n                  <div className=\"status\">{user.country}</div>\r\n                 <div className=\"status\">{user.status}</div></div>\r\n              )\r\n            })}\r\n           </div>\r\n\r\n           <Pagination\r\n            postsPerPage={postsPerPage}\r\n            totalPosts={userDetails && userDetails.length}\r\n            paginationIndex={paginationIndex}\r\n            udpatePageNumber={(i)=>setCurrentPage(i)}\r\n            paginate={(data)=>setpaginate(data,'click')}\r\n            updatePaginationIndex={(data,totalnumbers)=>updatePaginationData(data,totalnumbers)}\r\n            pageNo={currentPage && currentPage}\r\n            />\r\n\r\n    </div>\r\n  )\r\n  }\r\n\r\n\r\nexport default Dashboard;","D:\\Task\\Machine-Test\\machinetest\\src\\Components\\Login\\Login.jsx",["77"],"import React,{useState} from \"react\";\r\nimport './Login.css'\r\n\r\n\r\n\r\nconst Login = ({ users,changeAuth,history }) => {\r\n  const[emailError,setEmailError]=useState({})\r\n  const[passError,setPassError]=useState({})\r\n\r\nconst handleSubmit =(e)=>{\r\n \r\n  e.preventDefault()\r\n    const isValid = validate();\r\n    if(isValid == true){\r\n     const validUser = users && users.findIndex(user => user.email === loginData.email && user.password === loginData.password)\r\n    if(validUser !== -1) {\r\n      localStorage.setItem(\"loggedInUser\",JSON.stringify(users[validUser]))\r\n      changeAuth()\r\n      history.push(\"/dashboard\")\r\n    }else {\r\n      alert(\"Invalid email or password\")  \r\n    }\r\n   \r\n  }\r\n}   \r\n\r\nconst [loginData,setLoginData] = useState({email:\"\",password:\"\"})\r\n\r\nconst {email,password} = loginData;\r\n\r\nconst handleChange = (e) => {\r\n  setLoginData({...loginData,[e.target.name]:e.target.value})\r\n \r\n}\r\n\r\n\r\nconst validate = ()=>{\r\n  \r\n const emailError={};\r\n const passError={};\r\n  let isValid=true;\r\n\r\n if(loginData && loginData.email === \"\" ) {\r\n  emailError.emailEmpty=\"Field Required\"\r\n    isValid=false;\r\n    } \r\n  if(loginData.email.length >0 && !loginData.email.includes(\"@\") ){\r\n    emailError.emailMissing=\"Please Include @ . in the Email Address\"\r\n      isValid=false;\r\n    }\r\n \r\n    \r\n  if(loginData.password === \"\"){\r\n    passError.passEmpty=\"Field Required\"\r\n    isValid=false;\r\n  }\r\n    setEmailError(emailError)\r\n    setPassError(passError)\r\n    return isValid\r\n   \r\n}\r\n\r\n  return(\r\n    <div className=\"login_content\">\r\n        <header>\r\n      <h1>Machine Test</h1>\r\n          <h1>Login</h1>\r\n        </header>\r\n\r\n        <form  onSubmit={handleSubmit} autocomplete=\"off\" >\r\n            <div className=\"login_fields\">\r\n                <input \r\n                className=\"input_boxes\"\r\n                type=\"email\" \r\n                name=\"email\" \r\n                value={email}\r\n                placeholder=\"Email\" \r\n                onChange={(e) => handleChange(e)}\r\n                autocomplete=\"false\"\r\n              />\r\n               {Object.keys(emailError).map((key)=>{\r\n                 return <div className=\"err_msg\">{emailError[key]}</div>\r\n               })}\r\n            </div>\r\n \r\n\r\n            <div className=\"login_fields\">\r\n                <input \r\n                className=\"input_boxes\"\r\n                type=\"password\" \r\n                name=\"password\"\r\n                value={password}\r\n                placeholder=\"Password\"\r\n                onChange={(e) => handleChange(e)}\r\n                autocomplete=\"false\"\r\n               />\r\n                {Object.keys(passError).map((key)=>{\r\n                 return <div className=\"err_msg\">{passError[key]}</div>\r\n               })}\r\n            </div>\r\n          \r\n           \r\n            <div className=\"login_btn\">\r\n             <button onClick={handleSubmit}>Login</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n  )\r\n  }\r\n\r\n\r\nexport default Login;","D:\\Task\\Machine-Test\\machinetest\\src\\Components\\UserManage\\UserManage.jsx",["78"],"import React,{useEffect,useState} from \"react\";\r\nimport './UserManage.css'\r\nimport { MdModeEdit, MdDelete } from \"react-icons/md\";\r\nimport UserManageModal from \"../UsermanageModal/UsermanageModal\";\r\nimport UserdeleteManage from \"../UsermanageModal/UserdeleteModal\";\r\nimport Pagination,{PaginationHelper} from '../Pagination/Pagination';\r\nimport Logout from '../Login/Logout'\r\n\r\n\r\n\r\nconst UserManage = ({history}) => {\r\n\r\n \r\n  const [insertopen,setinsertopen] = useState(false)\r\n  const [editopen,seteditopen] = useState(false)\r\n\r\n  const [opendelete,setopendelete] = useState(false)\r\n  const [userDetails,setUserDetails] = useState([]);\r\n  const [loggedInUser,setLoggedInUser] = useState(null)\r\n\r\n  const [userId,setUserId] = useState(null)\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [currId,setCurrId] = useState(null)\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(5);\r\n  const [paginationIndex,updatePaginationIndex] =useState(0);\r\n\r\n  useEffect(() => {\r\n      loadUserDetails()\r\n  },[])\r\n\r\n\r\n  const loadUserDetails = () => {\r\n   \r\n    if(localStorage.users) {\r\n      const user = JSON.parse(localStorage.getItem(\"users\"))\r\n      setUserDetails(user)\r\n    }\r\n\r\n    if(localStorage.loggedInUser) {\r\n      const user = JSON.parse(localStorage.getItem(\"loggedInUser\"))\r\n      setLoggedInUser(user)\r\n      setCurrId(user.userId)\r\n    }\r\n  }\r\n\r\n  const addModal = ()=> {\r\n    setOpen(true);\r\n    setinsertopen(true)\r\n    seteditopen(false)\r\n\r\n  }\r\n\r\n  const editModal = (userId)=> {\r\n    setUserId(userId)\r\n    setOpen(true)\r\n    seteditopen(true)\r\n    setinsertopen(false)\r\n  }\r\n\r\n  const deleteOpen = (userId)=>{\r\n    setUserId(userId)\r\n    setopendelete(true)\r\n  }\r\n\r\n\r\n  const handleClose =()=>{\r\n    setOpen(false);\r\n    setinsertopen(false)\r\n    seteditopen(false)\r\n    setopendelete(false)\r\n}\r\n\r\n  // Get current posts\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = userDetails && userDetails.filter((user)=>user.role === \"user\" && user.userId !== currId).slice\r\n  (indexOfFirstPost, indexOfLastPost);\r\n\r\n  // Change page\r\n  // const managePage = managePage => setCurrentPage(managePage);\r\n\r\n  const setpaginate = (pageNumber,click_data) => {\r\n\r\n    var gethelperData=PaginationHelper.checkingPaginationProcess(pageNumber,click_data,null,userDetails,postsPerPage,currentPage);\r\n    if(gethelperData.pageNumber){\r\n      setCurrentPage(gethelperData.pageNumber);\r\n    }\r\n    if(gethelperData.totalmovedpage>=0){\r\n      updatePaginationIndex(gethelperData.totalmovedpage);\r\n    }\r\n\r\n  }\r\n\r\n  const updatePaginationData=(data,totalnumbers)=>{\r\n\r\n    updatePaginationIndex(data);\r\n    var gethelperData=PaginationHelper.checkingPaginationProcess((data*5)+1,null,totalnumbers,userDetails,postsPerPage,currentPage);\r\n    if(gethelperData.pageNumber){\r\n      setCurrentPage(gethelperData.pageNumber);\r\n    }\r\n\r\n  }\r\n\r\n  \r\n  return(\r\n    <div>\r\n    \r\n        <Logout history={history} loggedInUser={loggedInUser}/>\r\n\r\n        <div>\r\n        \r\n         </div>\r\n        <div className=\"usermanage_content\">\r\n        {loggedInUser && (loggedInUser.role === \"root\" ||  \"admin\") &&<div className=\"useradd_btn\">\r\n           <button onClick={addModal}>Add User</button>\r\n         </div>}\r\n        <div className=\"usermanage_header\">User List<span>Action</span></div>\r\n            {currentPosts && currentPosts.length > 0 && currentPosts.map((user) => {\r\n              return(\r\n              \r\n                <div className=\"users\">\r\n                <div className=\"usermanage_names\">{user.name}</div>\r\n                <div className=\"action_icons\">\r\n                {(loggedInUser.role === \"root\" ||  \"admin\") && <MdModeEdit  className=\"edit_icon\" onClick={() => editModal(user.userId)}/>}\r\n                  {loggedInUser.role === \"root\" && <MdDelete className=\"delete_icon\" onClick={() => deleteOpen(user.userId)}/>}\r\n                </div>\r\n                </div>\r\n              )\r\n            })}\r\n             \r\n         \r\n        </div>\r\n\r\n        {\r\n        open && \r\n         <div \r\n         open={open}\r\n         onClose={handleClose}\r\n         title={insertopen ? \"Add User\" : \"Edit User\"}\r\n         className={open === true ? \"modal_open\" : \"modal_close\" }\r\n         >\r\n           \r\n        <UserManageModal  add={insertopen} onClose={handleClose} users={userDetails} userId={userId} />\r\n\r\n        </div>\r\n        }\r\n\r\n      {\r\n        opendelete && \r\n         <div \r\n         open={deleteOpen}\r\n         onClose={handleClose}\r\n         className={opendelete === true ? \"modal_open\" : \"modal_close\" }         >\r\n\r\n        <UserdeleteManage onClose={handleClose} users={userDetails}  userId={userId} loadUserDetails={loadUserDetails} />\r\n\r\n        </div>\r\n        }\r\n\r\n            <Pagination\r\n            postsPerPage={postsPerPage}\r\n            totalPosts={userDetails && userDetails.length}\r\n            paginationIndex={paginationIndex}\r\n            udpatePageNumber={(i)=>setCurrentPage(i)}\r\n            paginate={(data)=>setpaginate(data,'click')}\r\n            updatePaginationIndex={(data,totalnumbers)=>updatePaginationData(data,totalnumbers)}\r\n            pageNo={currentPage && currentPage}\r\n            />\r\n\r\n    </div>\r\n  )\r\n  }\r\n\r\n\r\nexport default UserManage;","D:\\Task\\Machine-Test\\machinetest\\src\\Components\\UsermanageModal\\UsermanageModal.jsx",["79","80","81","82"],"import React,{useState,useEffect} from \"react\";\r\nimport './UsermanageModal.css'\r\nimport { uuid } from 'uuidv4';\r\nimport Input from \"../../formComponent/Input\";\r\nimport ValidationLibrary from \"../../formComponent/validation\";\r\n\r\n\r\nconst UserManageModal = ({ add,users,userId,onClose }) => {\r\n\r\n    const [userData,setUserData] = useState({\r\n        \"name\":{\r\n            value:\"\",\r\n            validation: [{ 'name': 'required' }],\r\n            error: null,\r\n            errmsg: null\r\n        },\r\n        \"email\":{\r\n            value:\"\",\r\n            validation: [{ 'name': 'required' }],\r\n            error: null,\r\n            errmsg: null\r\n        },\r\n        \"address\":{\r\n            value:\"\",\r\n            validation: [{ 'name': 'required' }],\r\n            error: null,\r\n            errmsg: null\r\n        },\r\n        \"country\":{\r\n            value:\"\",\r\n            validation: [{ 'name': 'required' }],\r\n            error: null,\r\n            errmsg: null\r\n        },\r\n    })\r\n    \r\n    const [checkStatus,setStatus] = useState({status:\"active\"})\r\n    const [userIndex,setIndex] = useState(null)\r\n\r\n    const {name,email,address,country,role} = userData;\r\n\r\n    const {status} = checkStatus;\r\n\r\n    const handleChange = (e) =>  setStatus({[e.target.name]:e.target.value})\r\n\r\n  \r\n     \r\n\r\n    useEffect(() => {\r\n        if(!add) {\r\n            const findUser = users && users.find(user => user.userId === userId)\r\n            const findIndex = users && users.map(user => user.userId).indexOf(userId)\r\n\r\n            setIndex(findIndex)\r\n\r\n            const {name,email,address,country,status,role} = findUser;\r\n            setUserData({\r\n                \"name\":{\r\n                    value:name,\r\n                    validation: [{ 'name': 'required' }],\r\n                    error: null,\r\n                    errmsg: null\r\n                },\"email\":{\r\n                    value:email,\r\n                    validation: [{ 'name': 'required' }],\r\n                    error: null,\r\n                    errmsg: null\r\n                },\"address\":{\r\n                    value:address,\r\n                    validation: [{ 'name': 'required' }],\r\n                    error: null,\r\n                    errmsg: null\r\n                },\"country\":{\r\n                    value:country,\r\n                    validation: [{ 'name': 'required' }],\r\n                    error: null,\r\n                    errmsg: null\r\n                }\r\n            })\r\n\r\n            setStatus({status})\r\n        }\r\n    },[])\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        var userDataValues = userData;\r\n        var targetkeys = Object.keys(userDataValues);\r\n\r\n        for (var i in targetkeys) {\r\n          var errorcheck = ValidationLibrary.checkValidation(\r\n            userDataValues[targetkeys[i]].value,\r\n            userDataValues[targetkeys[i]].validation\r\n          );\r\n          userDataValues[targetkeys[i]].error = !errorcheck.state;\r\n          userDataValues[targetkeys[i]].errmsg = errorcheck.msg;\r\n        }\r\n        var filtererr = targetkeys.filter((obj) => userDataValues[obj].error === true);\r\n        if (filtererr.length > 0) {\r\n        \r\n          setUserData({...userDataValues})\r\n        } \r\n        if (filtererr.length === 0) {\r\n         \r\n             submitUser()\r\n        } \r\n    }\r\n\r\n    const submitUser = () => {\r\n      \r\n        const {name,email,address,country,role} = userData;\r\n        const {status} = checkStatus;\r\n\r\n\r\n        let validUser =  users && users.find(user => user.email === email.value)\r\n\r\n         if(add && validUser) {\r\n             alert(\"User already exists\")\r\n         }\r\n\r\n        //  Add user\r\n         if(add && !validUser) {\r\n              users && users.push({userId:uuid(),name:name.value,email:email.value,address:address.value,country:country.value,status,role:\"user\"})\r\n              localStorage.setItem(\"users\",JSON.stringify(users))\r\n              onClose();\r\n         }\r\n\r\n        //  Edit user\r\n        if(!add) {\r\n         const editUser = users.some((user,index) => { \r\n             return userIndex !== index && user.email === email.value\r\n         })\r\n        \r\n        \r\n         if(!editUser) {\r\n         users[userIndex].name = name.value;\r\n         users[userIndex].email = email.value;\r\n         users[userIndex].address = address.value;\r\n         users[userIndex].country = country.value;\r\n         users[userIndex].status = status;\r\n         users[userIndex].role = \"user\";\r\n        \r\n         localStorage.setItem(\"users\",JSON.stringify(users))\r\n         onClose()\r\n     }else{\r\n         alert(\"user already exists\")\r\n     }\r\n}\r\n    }\r\n\r\n \r\n\r\n   const changeDynamic = (data, key) => {\r\n        let userDataValues = userData;\r\n        let targetkeys = Object.keys(userDataValues);\r\n\r\n        var errorcheck = ValidationLibrary.checkValidation(data, userDataValues[key].validation);\r\n        userDataValues[key].value = data;\r\n        userDataValues[key].error = !errorcheck.state;\r\n        userDataValues[key].errmsg = errorcheck.msg;\r\n        setUserData({ ...userData,userDataValues });\r\n        var filtererr = targetkeys.filter((obj) =>\r\n            userDataValues[obj].error === true || userDataValues[obj].error == null);\r\n        if (filtererr.length > 0) {\r\n            \r\n        } else {\r\n           \r\n        }\r\n        \r\n    }\r\n\r\n  return(\r\n    <div className=\"modal\">\r\n     <div className=\"modal_title\">{ add ? \"ADD USER\" : \"EDIT USER\" }</div>\r\n     <div className=\"divider\"/>\r\n     <form onSubmit={(e) => handleSubmit(e)}>\r\n\r\n     <div className=\"grid-container\">\r\n\r\n     <div className=\"grid-item\">\r\n         \r\n         <Input label={\"Name\"} className=\"userdata_fields\" type=\"text\" name=\"name\" value={name.value} changeData={(data) => changeDynamic(data,\"name\")} error={name.error} errmsg={name.errmsg}  />\r\n     </div>\r\n\r\n     <div className=\"grid-item\">\r\n   \r\n         <Input label={\"Email\"} className=\"userdata_fields\" type=\"email\" name=\"email\" value={email.value} changeData={(data) => changeDynamic(data,\"email\")}  error={email.error} errmsg={email.errmsg}   />\r\n     </div>\r\n\r\n     <div className=\"grid-item\">\r\n      \r\n         <Input label={\"Address\"} className=\"userdata_fields\" type=\"text\" name=\"address\" value={address.value} changeData={(data) => changeDynamic(data,\"address\")}  error={address.error} errmsg={address.errmsg}   />\r\n     </div>\r\n\r\n     <div className=\"grid-item\">\r\n         <Input label={\"Country\"} className=\"userdata_fields\" type=\"text\" name=\"country\" value={country.value} changeData={(data) => changeDynamic(data,\"country\")}  error={country.error} errmsg={country.errmsg}   />\r\n     </div>\r\n\r\n     <div className=\"grid-item\">\r\n         <div className=\"field_label\">Status</div>\r\n         <select className=\"status_fields\" name=\"status\" value={status}  onChange={(e) => handleChange(e)} >\r\n            <option value=\"active\">Active</option>\r\n            <option value=\"inactive\">In-Active</option>\r\n        </select>     \r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n\r\n  \r\n    <div className=\"btn_wraps\">\r\n        <button className=\"cancel_btn\" onClick={() => onClose()}>Cancel</button>    \r\n        <button className=\"addedit_btn\" type=\"submit\" >{add ? \"ADD\" : \"UPDATE\"}</button>\r\n    </div>\r\n    </form>\r\n    </div>\r\n  )\r\n  }\r\n\r\n\r\nexport default UserManageModal;","D:\\Task\\Machine-Test\\machinetest\\src\\Components\\UsermanageModal\\UserdeleteModal.jsx",[],"D:\\Task\\Machine-Test\\machinetest\\src\\Components\\TodoList\\TodoList.jsx",["83","84"],"import React, { useState, useEffect } from 'react';\r\nimport  './TodoList.css';\r\nimport Pagination,{PaginationHelper} from '../Pagination/Pagination';\r\nimport Logout from '../Login/Logout'\r\n\r\n\r\nconst TodoList = ({history}) => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(5);\r\n  const [hasError, setErrors] = useState(false);\r\n  const [paginationIndex,updatePaginationIndex] =useState(0);\r\n  const [userDetails,setUserDetails] = useState([]);\r\n  const [loggedInUser,setLoggedInUser] = useState(null)\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const fetchTodo = async () => {\r\n      setLoading(true);\r\n      const res = await fetch('https://jsonplaceholder.typicode.com/todos')\r\n      res.json()\r\n      .then(res => setPosts(res))     \r\n      .catch(err => setErrors(err)); \r\n      setLoading(false); \r\n    };\r\n\r\n    fetchTodo();\r\n    loadUserDetails();\r\n  }, []);\r\n\r\n\r\n  // Get current posts\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = posts && posts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  // Change page\r\n  const setpaginate = (pageNumber,click_data) => {\r\n\r\n    var gethelperData=PaginationHelper.checkingPaginationProcess(pageNumber,click_data,null,posts,postsPerPage,currentPage);\r\n    if(gethelperData.pageNumber){\r\n      setCurrentPage(gethelperData.pageNumber);\r\n    }\r\n    if(gethelperData.totalmovedpage>=0){\r\n      updatePaginationIndex(gethelperData.totalmovedpage);\r\n    }\r\n\r\n  }\r\n\r\n  const loadUserDetails = () => {\r\n   \r\n    if(localStorage.users) {\r\n      const user = JSON.parse(localStorage.getItem(\"users\"))\r\n      setUserDetails(user)\r\n    }\r\n\r\n    if(localStorage.loggedInUser) {\r\n      const user = JSON.parse(localStorage.getItem(\"loggedInUser\"))\r\n      setLoggedInUser(user)\r\n     \r\n    }\r\n  }\r\n\r\n  const updatePaginationData=(data,totalnumbers)=>{\r\n    updatePaginationIndex(data);\r\n    var gethelperData=PaginationHelper.checkingPaginationProcess((data*5)+1,null,totalnumbers,posts,postsPerPage,currentPage);\r\n    if(gethelperData.pageNumber){\r\n      setCurrentPage(gethelperData.pageNumber);\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    \r\n    <div className='container mt-5'>\r\n   \r\n        <Logout history={history} loggedInUser={loggedInUser}/>\r\n        <div className=\"todolist_content\">\r\n       \r\n        <table className=\"table_style\">\r\n   \r\n            <tr>\r\n                <th>To Do Task</th>\r\n                <th>Status</th>              \r\n            </tr>\r\n            {loading === true ? <div className=\"load_class\"><h4>Loading...</h4></div> :  \r\n            currentPosts && currentPosts.map(currentPosts => (\r\n            \r\n           <tr>           \r\n                <td>{currentPosts.title}</td>\r\n                <td>{currentPosts.completed === true ? \"Completed\" : \"Pending\" }</td>      \r\n            </tr>\r\n            ))} \r\n    </table>\r\n\r\n    </div>\r\n    \r\n   \r\n   \r\n      <Pagination\r\n        postsPerPage={postsPerPage}\r\n        totalPosts={posts && posts.length}\r\n        paginate={(data)=>setpaginate(data,'click')}\r\n        paginationIndex={paginationIndex}\r\n        updatePaginationIndex={(data,totalnumbers)=>updatePaginationData(data,totalnumbers)}\r\n        udpatePageNumber={(i)=>setCurrentPage(i)}\r\n        pageNo={currentPage && currentPage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;","D:\\Task\\Machine-Test\\machinetest\\src\\formComponent\\validation.js",["85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103"],"import React, { Component } from 'react';\r\n\r\nclass ValidationLibrary extends Component {\r\n  checkValidation(textValue, validatorsArray) {\r\n    for (var valid in validatorsArray) {//check validations through array\r\n      if (textValue === \"\") {//check value is empty\r\n        if (validatorsArray[valid].name === 'required') {\r\n          return { msg: \"Field required\", state: false };//validation occurs break the loop & throw the error\r\n        }\r\n      } else if (validatorsArray[valid].name === 'email') {\r\n        var re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n        if (re.test(textValue) === false) {\r\n\r\n          return { msg: \"Email is invalid\", state: false };//validation occurs break the loop & throw the error\r\n        }\r\n      } else if (validatorsArray[valid].name === 'minLength') {\r\n        if (textValue.length > parseInt(validatorsArray[valid].params)) {\r\n          return { msg: \"Length should not exceed \" + validatorsArray[valid].params + \" characters\", state: false };//validation occurs break the loop & throw the error\r\n        }\r\n      } else if (validatorsArray[valid].name === 'custommaxLength') {\r\n        if (textValue.length > parseInt(validatorsArray[valid].params)) {\r\n          return { msg: \"Length should not exceed \" + validatorsArray[valid].params + \" characters\", state: false };//validation occurs break the loop & throw the error\r\n        }\r\n      } else if (validatorsArray[valid].name === 'mobile') {\r\n        var re = /^([0-9][0-9]{9,14})$/;\r\n        if (re.test(textValue) === false) {\r\n          return { msg: \"Please Enter 10 to 15 digit Mobile Number\", state: false };\r\n        }\r\n      }\r\n      else if (validatorsArray[valid].name === 'mobile_india') {\r\n        var re = /^([0-9][0-9]{9})$/;\r\n        if (re.test(textValue) === false) {\r\n          return { msg: \"Please Enter 10 digit Mobile Number\", state: false };\r\n        }\r\n      }\r\n\r\n      else if (validatorsArray[valid].name === 'leave') {\r\n        var re = /^(0|[1-9][0-9]{0,1})$/;\r\n        if (re.test(textValue) === false) {\r\n          return { msg: \"2 digits only allowed\", state: false };\r\n        }\r\n      }\r\n      else if (validatorsArray[valid].name === 'mark') {\r\n        var re = /^([0-9][0-9]{0,2})$/;\r\n        if (re.test(textValue) === false) {\r\n          return { msg: \"Please Enter 3 digits Only\", state: false };\r\n        }\r\n      }\r\n       else if (validatorsArray[valid].name === 'regex') {\r\n        if (new RegExp(validatorsArray[valid].params).test(textValue) === false) {\r\n          return { msg: validatorsArray[valid].msg, state: false };\r\n        }\r\n      }\r\n      else if (validatorsArray[valid].name === 'webUrl') {\r\n        var re = /^((ftp|http|https):\\/\\/)?(www.)?(?!.*(ftp|http|https|www.))[a-zA-Z0-9_-]+(\\.[a-zA-Z]+)+((\\/)[\\w#]+)*(\\/\\w+\\?[a-zA-Z0-9_]+=\\w+(&[a-zA-Z0-9_]+=\\w+)*)?$/;\r\n        if (re.test(textValue) === false) {\r\n          return { msg: \"Url is invalid\", state: false };\r\n        }\r\n      }\r\n      else if (validatorsArray[valid].name === 'address') {\r\n        var re = /^[a-zA-Z0-9\\s,'-.]*$/;\r\n        if (re.test(textValue) === false) {\r\n          return { msg: \"Invalid Address\", state: false };\r\n        }\r\n      }\r\n    }\r\n    return { msg: \"\", state: true };//if no error throw empty message\r\n  }\r\n}\r\nexport default new ValidationLibrary();","D:\\Task\\Machine-Test\\machinetest\\src\\formComponent\\Input.js",[],"D:\\Task\\Machine-Test\\machinetest\\src\\Components\\Login\\Logout.jsx",["104","105"],"import React,{useEffect,useState} from \"react\";\r\nimport {BrowserRouter as Router,Route,Link,} from \"react-router-dom\";\r\nimport './Logout.css'\r\n\r\nconst Logout = ({ loggedInUser,history }) => {\r\n\r\n    const [currentLocation,setCurrentLocation] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n       \r\n        setCurrentLocation(window.location.href)\r\n    },[])\r\n\r\nconst logout = () => {\r\n    localStorage.setItem(\"loggedInUser\",\"\")\r\n    history.push(\"/\")\r\n  \r\n}\r\n\r\nreturn (\r\n<div className=\"logout\" >\r\n\r\n<div className=\"dash_title\">\r\n           <div className=\"header_links\">\r\n           <Link to=\"/dashboard\" \r\n           className={`${currentLocation !== null && currentLocation.includes(\"/dashboard\") ? \"active_text_heading\" :\"link_header\"}`}>\r\n           Dashboard</Link>\r\n           </div>\r\n           \r\n          {loggedInUser && loggedInUser.role !== \"user\" && \r\n           <div className=\"header_links\">\r\n           <Link to=\"/usermanage\" \r\n             className={`${currentLocation !== null && currentLocation.includes(\"/usermanage\") ? \"active_text_heading\" : \"link_header\" }`}>\r\n             User Management </Link>\r\n           </div>}\r\n           <div className=\"header_links\">\r\n           <Link to=\"/todolist\" \r\n           className={`${currentLocation !== null && currentLocation.includes(\"/todolist\") ? \"active_text_heading\" :\"link_header\"}`}>\r\n               Todo List</Link>\r\n           </div>\r\n           </div>\r\n\r\n<div className=\"logged_user\">{loggedInUser && loggedInUser.name}\r\n <button className=\"logout_btn\" onClick={logout}>Log out</button>\r\n </div>\r\n</div>\r\n)\r\n}\r\n\r\nexport default Logout","D:\\Task\\Machine-Test\\machinetest\\src\\Components\\Pagination\\Pagination.jsx",["106","107","108","109"],"import React from 'react';\r\nimport './Pagination.css';\r\n\r\n\r\nexport const PaginationHelper={\r\n\r\n  checkingPaginationProcess : (pageNumber,click_data,totalnumbers,posts,postsPerPage,currentPage) => {\r\n\r\n    var totalmovedpage=Math.ceil(pageNumber/5)-1;//to find where the pagenumber falls in which row\r\n    var totalpagerow=Math.ceil(Math.ceil(posts.length/postsPerPage)/5);//to find how much rows we have\r\n    var checkcurrentnumber=(totalmovedpage*5)+1;\r\n    var checkcurrentnumbermax=(totalmovedpage+1)*5;\r\n    var checkcomingundermax=(currentPage>=checkcurrentnumber&&currentPage<=checkcurrentnumbermax);\r\n    \r\n    if(click_data){\r\n      return {'pageNumber':pageNumber,'totalmovedpage':totalmovedpage,'click':true}\r\n    }\r\n    if((totalmovedpage==0&&checkcomingundermax)||(totalmovedpage==(totalpagerow-1)&&checkcomingundermax)){\r\n      return {};\r\n    }\r\n   return {'pageNumber':pageNumber}\r\n  }\r\n \r\n}\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate,pageNo,udpatePageNumber,paginationIndex,updatePaginationIndex }) => {\r\n  \r\n  const pageNumbers = [];\r\n  \r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  \r\nconst totalpaginationdivideLength=Math.ceil(pageNumbers.length/5);\r\nreturn (\r\n  \r\n      <div className='pagination'>\r\n  {pageNumbers.length>0 ? \r\n    <>\r\n      <button onClick={()=>updatePaginationIndex&&updatePaginationIndex(paginationIndex>1?paginationIndex-1:0,pageNumbers.length)} className=\"page_icon\">&laquo;</button>\r\n\r\n       <button onClick={()=>udpatePageNumber&&paginate(pageNo>0?pageNo-1:1)} className=\"page_text\">Previous</button>\r\n\r\n        {JSON.parse(JSON.stringify(pageNumbers)).splice(paginationIndex*5,5).map(number => (\r\n          <div key={number} className={`page_no ${pageNo==number?'active':''}`}>\r\n            <a onClick={() => paginate(number)}  className='pageno_link'>\r\n              {number}\r\n            </a>\r\n          </div>\r\n        ))}\r\n\r\n       <button onClick={()=>udpatePageNumber&&paginate((pageNo<pageNumbers.length)?(pageNo+1):pageNumbers.length)} className=\"page_text\">Next</button>\r\n\r\n       <button onClick={()=>updatePaginationIndex&&updatePaginationIndex(paginationIndex<totalpaginationdivideLength-1?paginationIndex+1:totalpaginationdivideLength-1,pageNumbers.length)} className=\"page_icon\">&raquo;</button>\r\n    </> : \"\"}\r\n      </div>\r\n  \r\n  );\r\n};\r\n\r\nexport default Pagination;",{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":25,"column":148,"nodeType":"116","messageId":"117","endLine":25,"endColumn":150},{"ruleId":"118","severity":1,"message":"119","line":26,"column":29,"nodeType":"120","messageId":"121","endLine":26,"endColumn":31},{"ruleId":"118","severity":1,"message":"119","line":26,"column":92,"nodeType":"120","messageId":"121","endLine":26,"endColumn":94},{"ruleId":"122","severity":1,"message":"123","line":36,"column":3,"nodeType":"124","endLine":36,"endColumn":16,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":14,"column":16,"nodeType":"128","messageId":"129","endLine":14,"endColumn":18},{"ruleId":"130","severity":1,"message":"131","line":15,"column":10,"nodeType":"132","messageId":"133","endLine":15,"endColumn":18},{"ruleId":"130","severity":1,"message":"134","line":40,"column":39,"nodeType":"132","messageId":"133","endLine":40,"endColumn":43},{"ruleId":"130","severity":1,"message":"134","line":57,"column":54,"nodeType":"132","messageId":"133","endLine":57,"endColumn":58},{"ruleId":"122","severity":1,"message":"135","line":84,"column":7,"nodeType":"124","endLine":84,"endColumn":9,"suggestions":"136"},{"ruleId":"130","severity":1,"message":"134","line":118,"column":43,"nodeType":"132","messageId":"133","endLine":118,"endColumn":47},{"ruleId":"130","severity":1,"message":"137","line":12,"column":10,"nodeType":"132","messageId":"133","endLine":12,"endColumn":18},{"ruleId":"130","severity":1,"message":"138","line":14,"column":10,"nodeType":"132","messageId":"133","endLine":14,"endColumn":21},{"ruleId":"130","severity":1,"message":"139","line":1,"column":8,"nodeType":"132","messageId":"133","endLine":1,"endColumn":13},{"ruleId":"140","severity":1,"message":"141","line":12,"column":28,"nodeType":"142","messageId":"143","endLine":12,"endColumn":29,"suggestions":"144"},{"ruleId":"140","severity":1,"message":"145","line":12,"column":32,"nodeType":"142","messageId":"143","endLine":12,"endColumn":33,"suggestions":"146"},{"ruleId":"140","severity":1,"message":"147","line":12,"column":40,"nodeType":"142","messageId":"143","endLine":12,"endColumn":41,"suggestions":"148"},{"ruleId":"140","severity":1,"message":"141","line":12,"column":53,"nodeType":"142","messageId":"143","endLine":12,"endColumn":54,"suggestions":"149"},{"ruleId":"140","severity":1,"message":"145","line":12,"column":57,"nodeType":"142","messageId":"143","endLine":12,"endColumn":58,"suggestions":"150"},{"ruleId":"140","severity":1,"message":"147","line":12,"column":65,"nodeType":"142","messageId":"143","endLine":12,"endColumn":66,"suggestions":"151"},{"ruleId":"140","severity":1,"message":"147","line":12,"column":74,"nodeType":"142","messageId":"143","endLine":12,"endColumn":75,"suggestions":"152"},{"ruleId":"140","severity":1,"message":"147","line":12,"column":78,"nodeType":"142","messageId":"143","endLine":12,"endColumn":79,"suggestions":"153"},{"ruleId":"140","severity":1,"message":"145","line":12,"column":94,"nodeType":"142","messageId":"143","endLine":12,"endColumn":95,"suggestions":"154"},{"ruleId":"140","severity":1,"message":"147","line":12,"column":102,"nodeType":"142","messageId":"143","endLine":12,"endColumn":103,"suggestions":"155"},{"ruleId":"140","severity":1,"message":"145","line":12,"column":119,"nodeType":"142","messageId":"143","endLine":12,"endColumn":120,"suggestions":"156"},{"ruleId":"140","severity":1,"message":"147","line":12,"column":127,"nodeType":"142","messageId":"143","endLine":12,"endColumn":128,"suggestions":"157"},{"ruleId":"158","severity":1,"message":"159","line":26,"column":13,"nodeType":"132","messageId":"160","endLine":26,"endColumn":15},{"ruleId":"158","severity":1,"message":"159","line":32,"column":13,"nodeType":"132","messageId":"160","endLine":32,"endColumn":15},{"ruleId":"158","severity":1,"message":"159","line":39,"column":13,"nodeType":"132","messageId":"160","endLine":39,"endColumn":15},{"ruleId":"158","severity":1,"message":"159","line":45,"column":13,"nodeType":"132","messageId":"160","endLine":45,"endColumn":15},{"ruleId":"158","severity":1,"message":"159","line":56,"column":13,"nodeType":"132","messageId":"160","endLine":56,"endColumn":15},{"ruleId":"158","severity":1,"message":"159","line":62,"column":13,"nodeType":"132","messageId":"160","endLine":62,"endColumn":15},{"ruleId":"130","severity":1,"message":"161","line":2,"column":26,"nodeType":"132","messageId":"133","endLine":2,"endColumn":32},{"ruleId":"130","severity":1,"message":"162","line":2,"column":33,"nodeType":"132","messageId":"133","endLine":2,"endColumn":38},{"ruleId":"126","severity":1,"message":"127","line":18,"column":23,"nodeType":"128","messageId":"129","endLine":18,"endColumn":25},{"ruleId":"126","severity":1,"message":"127","line":18,"column":65,"nodeType":"128","messageId":"129","endLine":18,"endColumn":67},{"ruleId":"126","severity":1,"message":"127","line":44,"column":57,"nodeType":"128","messageId":"129","endLine":44,"endColumn":59},{"ruleId":"163","severity":1,"message":"164","line":45,"column":13,"nodeType":"165","endLine":45,"endColumn":74},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userDetails'. Either include it or remove the dependency array.","ArrayExpression",["168"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'editopen' is assigned a value but never used.","Identifier","unusedVar","'role' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'add', 'userId', and 'users'. Either include them or remove the dependency array.",["169"],"'hasError' is assigned a value but never used.","'userDetails' is assigned a value but never used.","'React' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["170","171"],"Unnecessary escape character: \\..",["172","173"],"Unnecessary escape character: \\\".",["174","175"],["176","177"],["178","179"],["180","181"],["182","183"],["184","185"],["186","187"],["188","189"],["190","191"],["192","193"],"no-redeclare","'re' is already defined.","redeclared","'Router' is defined but never used.","'Route' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"messageId":"198","fix":"199","desc":"200"},{"messageId":"201","fix":"202","desc":"203"},{"messageId":"198","fix":"204","desc":"200"},{"messageId":"201","fix":"205","desc":"203"},{"messageId":"198","fix":"206","desc":"200"},{"messageId":"201","fix":"207","desc":"203"},{"messageId":"198","fix":"208","desc":"200"},{"messageId":"201","fix":"209","desc":"203"},{"messageId":"198","fix":"210","desc":"200"},{"messageId":"201","fix":"211","desc":"203"},{"messageId":"198","fix":"212","desc":"200"},{"messageId":"201","fix":"213","desc":"203"},{"messageId":"198","fix":"214","desc":"200"},{"messageId":"201","fix":"215","desc":"203"},{"messageId":"198","fix":"216","desc":"200"},{"messageId":"201","fix":"217","desc":"203"},{"messageId":"198","fix":"218","desc":"200"},{"messageId":"201","fix":"219","desc":"203"},{"messageId":"198","fix":"220","desc":"200"},{"messageId":"201","fix":"221","desc":"203"},{"messageId":"198","fix":"222","desc":"200"},{"messageId":"201","fix":"223","desc":"203"},{"messageId":"198","fix":"224","desc":"200"},{"messageId":"201","fix":"225","desc":"203"},"Update the dependencies array to be: [entersearch, userDetails]",{"range":"226","text":"227"},"Update the dependencies array to be: [add, userId, users]",{"range":"228","text":"229"},"removeEscape",{"range":"230","text":"231"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"232","text":"233"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"234","text":"231"},{"range":"235","text":"233"},{"range":"236","text":"231"},{"range":"237","text":"233"},{"range":"238","text":"231"},{"range":"239","text":"233"},{"range":"240","text":"231"},{"range":"241","text":"233"},{"range":"242","text":"231"},{"range":"243","text":"233"},{"range":"244","text":"231"},{"range":"245","text":"233"},{"range":"246","text":"231"},{"range":"247","text":"233"},{"range":"248","text":"231"},{"range":"249","text":"233"},{"range":"250","text":"231"},{"range":"251","text":"233"},{"range":"252","text":"231"},{"range":"253","text":"233"},{"range":"254","text":"231"},{"range":"255","text":"233"},[1167,1180],"[entersearch, userDetails]",[2542,2544],"[add, userId, users]",[580,581],"",[580,580],"\\",[584,585],[584,584],[592,593],[592,592],[605,606],[605,605],[609,610],[609,609],[617,618],[617,617],[626,627],[626,626],[630,631],[630,630],[646,647],[646,646],[654,655],[654,654],[671,672],[671,671],[679,680],[679,679]]